[{"content":"3 months ago I installed NixOS, i3wm and XFCE on my new Thinkpad T14 (1st Gen). It is my main machine that I use every day. In this blog post I summarize my experience with this setup.\nSetup ▗▄▄▄ ▗▄▄▄▄ ▄▄▄▖ josef@host ▜███▙ ▜███▙ ▟███▛ -------------- ▜███▙ ▜███▙▟███▛ OS: NixOS 21.05 (Okapi) x86_64 ▜███▙ ▜██████▛ Host: 20UD0013MZ ThinkPad T14 Gen 1 ▟█████████████████▙ ▜████▛ ▟▙ Kernel: 5.14.10 ▟███████████████████▙ ▜███▙ ▟██▙ Uptime: 17 hours, 35 mins ▄▄▄▄▖ ▜███▙ ▟███▛ Packages: 1534 (nix-system), 288 (nix-user) ▟███▛ ▜██▛ ▟███▛ Shell: zsh 5.8 ▟███▛ ▜▛ ▟███▛ Resolution: 1920x1080 ▟███████████▛ ▟██████████▙ DE: Xfce 4.16 ▜██████████▛ ▟███████████▛ WM: i3 ▟███▛ ▟▙ ▟███▛ Theme: Adwaita-dark [GTK2] ▟███▛ ▟██▙ ▟███▛ Icons: Rodent [GTK2] ▟███▛ ▜███▙ ▝▀▀▀▀ Terminal: urxvt ▜██▛ ▜███▙ ▜██████████████████▛ Terminal Font: Source Code Pro ▜▛ ▟████▙ ▜████████████████▛ CPU: AMD Ryzen 7 PRO 4750U with Radeon Graphics ▟██████▙ ▜███▙ GPU: AMD ATI 07:00.0 Renoir ▟███▛▜███▙ ▜███▙ Memory: 4425MiB / 15232MiB ▟███▛ ▜███▙ ▜███▙ ▝▀▀▀ ▀▀▀▀▘ ▀▀▀▘ Window Manager + Desktop Manager Coming from Arch, I was quite comfortable using i3wm as my tiling window manager. After setting it up 4 years ago I was sure I could never go back to non-tiling windows.\nHowever, I always assumed that the trade-off of using such a productive window manager was loss of convenience. With my Arch setup, I had to mount USB sticks myself, discover, pair and connect Bluetooth devices from the command line and map media keys (such as brightness and audio volume) manually in my .config/i3/config.\nLittle did I know that I was missing a Desktop Manager!\nLet me explain in Nix:\nservices.xserver.windowManager.i3.enable = true; services.xserver.desktopManager = { xterm.enable = false; xfce = { enable = true; noDesktop = true; enableXfwm = false; }; }; This is all it took to enable i3wm as my tiling Window Manager and XFCE as my Desktop Manager. Now XFCE is taking care of all the things that macOS and Windows users take for granted, such as USB stick mounting, login screen, screensaver, centralized settings and external monitor handling. I can have all that wile tiling my windows. Best of both worlds!\nTo be fair, I recall reading about using XFCE and other desktop environments with tiling window managers. But it was NixOS that made the difference between Desktop Manager and Window Manager obvious to me.\nBattery life Coming from a T470 with an external battery so large, that it was also my laptop stand, I am not that happy with the battery life of the T14. Web development, answering emails, light browsing and occasional OCaml compilation drain the battery in about 5-6 hours.\nI activated TLP using following flag:\nservices.tlp.enable = true; I suspect that I should invest some time into understanding TLP to make most of it.\nThere was an issue with the T14 draining battery while asleep. Updating to the latest BIOS fixed this issues for me.\nCPU The CPU is hands down my favorite part of the T14. It stays cool and fast. The only time when I hear the fans is when I create OCaml switches.\nIt compiles Sihl in about 15 seconds.\nScreen My second favorite part of this machine is the screen. A bright screen allows me to work in sunny places.\nSwitching my Emacs theme to the light version allows me to work directly in the sun!\nFingerprint sensor I managed to get the fingerprint sensor working with just three lines:\nservices.fprintd.enable = true; security.pam.services.login.fprintAuth = true; security.pam.services.xscreensaver.fprintAuth = true; It works well.\nTrackpad Don\u0026rsquo;t forget to enable the trackpad, which is not done by the NixOS installer by default:\nservices.xserver.libinput.enable = true; It is just like any other Thinkpad trackpad. It is good, it does its job, but it is not an Apple trackpad.\nKernel settings I adjusted the kernel settings based on some research on similar Thinkpad models and their recommended confiration.nix.\nboot.initrd.availableKernelModules = [ \u0026#34;nvme\u0026#34; \u0026#34;ehci_pci\u0026#34; \u0026#34;xhci_pci\u0026#34; \u0026#34;usb_storage\u0026#34; \u0026#34;sd_mod\u0026#34; \u0026#34;rtsx_pci_sdmmc\u0026#34; \u0026#34;thinkpad_acpi\u0026#34; ]; boot.initrd.kernelModules = [ \u0026#34;acpi_call\u0026#34; ]; boot.kernelModules = [ \u0026#34;kvm-amd\u0026#34; ]; boot.extraModulePackages = with config.boot.kernelPackages; [ acpi_call ]; With these settings sleep and hibernation work as expected when I close the lid. Not once did the T14 wake up with a closed lid.\nSummary I am very happy with this AMD Ryzen based Thinkpad. Battery life could be better, but the bright screen and silent but powerful CPU make up for it. Everything else is typical Thinkpad level quality!\n","permalink":"https://www.joseferben.com/posts/thinkpad_t14_with_nixos_and_i3wm/","summary":"\u003cp\u003e3 months ago I installed NixOS, i3wm and XFCE on my new Thinkpad T14 (1st Gen). It is my main machine that I use every day. In this blog post I summarize my experience with this setup.\u003c/p\u003e","title":"Thinkpad T14 with NixOS and I3WM"},{"content":"I would like to give a quick shout out to Aaron Aron and his blog aronwith1a.com. This has nothing to do with the fact that I get to use the tags haskell, maths and agda.\nIf you enjoy quality original content about Haskell, Maths, formal methods or riddles, go check it out. This is a post he wrote for Oxidizing Systems about Haskell.\n","permalink":"https://www.joseferben.com/posts/aronwith1a_functional_programming_math_and_riddles/","summary":"\u003cp\u003eI would like to give a quick shout out to \u003cdel\u003eAaron\u003c/del\u003e Aron and his blog \u003ca href=\"https://www.aronwith1a.com\"\u003earonwith1a.com\u003c/a\u003e. This has nothing to do with the fact that I get to use the tags \u003ca href=\"/tags/haskell\"\u003ehaskell\u003c/a\u003e, \u003ca href=\"/tags/maths/\"\u003emaths\u003c/a\u003e and \u003ca href=\"/tags/agda/\"\u003eagda\u003c/a\u003e.\u003c/p\u003e","title":"aronwith1a.com - Functional Programming, Math and Riddles"},{"content":"You sit in a cozy coffee place and you just finished your coffee. You are still not connected to the WiFi while the MacBooks and Surface devices around you have sent and received Gigabytes of data since you sat down. You are a Linux user.\nWhat are Captive Portals? Captive portals are those web pages that magically open once you connect to some public WiFi. Sometimes you have to fill in your Email address or phone number to receive a code, but often you just have to confirm some terms of services.\nOn Linux they don\u0026rsquo;t work reliably, which is extra frustrating because you know that you are one click away from having an internet connection.\nThis is a collection of links that you can try manually to land on those captive portals.\nLinks  http://www.gstatic.com/generate_204 works in Starbucks ","permalink":"https://www.joseferben.com/posts/captive_portfals_in_coffee_shops_and_hotels_using_linux/","summary":"\u003cp\u003eYou sit in a cozy coffee place and you just finished your coffee. You are still not connected to the WiFi while the MacBooks and Surface devices around you have sent and received Gigabytes of data since you sat down. You are a Linux user.\u003c/p\u003e","title":"Captive Portals in Coffee Shops and Hotels using Linux"},{"content":"With following command you can print a random string of a certain length on Linux.\ntr -dc A-Za-z0-9 \u0026lt;/dev/urandom | head -c \u0026lt;length\u0026gt; ; echo \u0026#39;\u0026#39; The string is safe to use in most web contexts such as HTML forms or environment variables.\n","permalink":"https://www.joseferben.com/posts/generate_random_strings_on_linux_in_one_line/","summary":"With following command you can print a random string of a certain length on Linux.\ntr -dc A-Za-z0-9 \u0026lt;/dev/urandom | head -c \u0026lt;length\u0026gt; ; echo \u0026#39;\u0026#39; The string is safe to use in most web contexts such as HTML forms or environment variables.","title":"How to Generate Random Strings on Linux in One Line"},{"content":"This is a placeholder for an introductory blog post for hoarddit.com.\n","permalink":"https://www.joseferben.com/posts/hoarddit_a_website_to_discover_art/","summary":"This is a placeholder for an introductory blog post for hoarddit.com.","title":"Hoarddit - A Website to Discover Art"},{"content":"In order to play Anno 1404 on Proton, follow these steps.\nInstall DirectX WINEPREFIX=/home/\u0026lt;user\u0026gt;/.local/share/Steam/steamapps/compatdata/33350/pfx wine /home/\u0026lt;user\u0026gt;/.local/share/Steam/steamapps/common/Anno\\ 1404/DirectX/DXSETUP.exe Edit Engine.ini file The content of the file\n/home/\u0026lt;user\u0026gt;/.local/share/Steam/steamapps/common/Anno\\ 1404/Engine.ini \u0026lt;InitFile\u0026gt; \u0026lt;DirectXVersion\u0026gt;9\u0026lt;/DirectXVersion\u0026gt; \u0026lt;UbiSurveyTime\u0026gt;-1\u0026lt;/UbiSurveyTime\u0026gt; \u0026lt;UbiSurveyTimeStatus\u0026gt;2\u0026lt;/UbiSurveyTimeStatus\u0026gt; \u0026lt;/InitFile\u0026gt; ","permalink":"https://www.joseferben.com/posts/play_anno_1404_venice_on_proton/","summary":"\u003cp\u003eIn order to play Anno 1404 on \u003ca href=\"https://www.protondb.com/app/33350\"\u003eProton\u003c/a\u003e, follow these steps.\u003c/p\u003e","title":"Play Anno 1404 Venice on Proton"},{"content":"Install Dropbox using NixOS in your preferred way.\nAt the top of your i3wm configuration file add\nexec dropbox \u0026amp; nix-shell -p wineWowPackages.stable \u0026lsquo;winetricks.override { wine = wineWowPackages.staging; }\u0026rsquo; WINEPREFIX=/home/josef/.steam/steam/steamapps/compatdata/33350/pfx winetricks d3dx9\n","permalink":"https://www.joseferben.com/posts/autostart_dropbox_on_nixos/","summary":"\u003cp\u003eInstall Dropbox using NixOS in your preferred way.\u003c/p\u003e","title":"Autostart Dropbox on NixOS using I3WM"},{"content":"When hosting Django applications on AWS Elastic Beanstalk, it is often required to run commands on the server to do some maintenance tasks.\nBeanstalk provisions EC2 instances which are running the web server processes. Django commands need to run in the same environment.\nYou might want to fix your shell first.\nAfter connecting using SSH with\neb ssh load the environment variables using\nexport $(cat /opt/elasticbeanstalk/deployment/env | xargs) then load the Python environment using\nsource /var/app/venv and finally run your Django command\npython /var/app/current/manage.py runserver ","permalink":"https://www.joseferben.com/posts/running_django_commands_on_aws_elastic_beanstalk/","summary":"\u003cp\u003eWhen hosting Django applications on AWS Elastic Beanstalk, it is often required to run commands on the server to do some maintenance tasks.\u003c/p\u003e","title":"Running Django Commands on AWS Elastic Beanstalk"}]